@echo off
REM Script untuk Testing Sinoman App di BlueStacks dengan Logging
REM Author: Generated by Claude Code
REM Date: 2025-10-05

setlocal enabledelayedexpansion

echo ============================================
echo Sinoman App - BlueStacks Testing Script
echo ============================================
echo.

REM Set variables
set APP_PACKAGE=id.sinomanapp.mobile
set BLUESTACKS_PORT=5555
set TIMESTAMP=%date:~-4%%date:~3,2%%date:~0,2%-%time:~0,2%%time:~3,2%%time:~6,2%
set TIMESTAMP=%TIMESTAMP: =0%
set LOG_DIR=test-logs\%TIMESTAMP%

REM Create log directory
if not exist test-logs mkdir test-logs
if not exist %LOG_DIR% mkdir %LOG_DIR%

echo [1/8] Connecting to BlueStacks...
adb connect localhost:%BLUESTACKS_PORT%
adb devices
if errorlevel 1 (
    echo ERROR: Cannot connect to BlueStacks
    echo Make sure BlueStacks is running and ADB is enabled
    pause
    exit /b 1
)
echo OK - Connected to BlueStacks
echo.

echo [2/8] Checking for APK file...
if not exist sinoman-mobile-app.apk (
    echo ERROR: APK file not found!
    echo Please download APK from:
    echo https://expo.dev/accounts/arielampar/projects/sinoman-mobile-app/builds/2d245cc8-b9d4-4720-b97a-1ff4d66f242c
    pause
    exit /b 1
)
echo OK - APK file found
echo.

echo [3/8] Installing APK...
adb install -r -g sinoman-mobile-app.apk > %LOG_DIR%\install.log 2>&1
if errorlevel 1 (
    echo WARNING: Installation had issues, check %LOG_DIR%\install.log
) else (
    echo OK - APK installed successfully
)
type %LOG_DIR%\install.log
echo.

echo [4/8] Clearing old logs...
adb logcat -c
echo OK - Logs cleared
echo.

echo [5/8] Starting logcat in background...
start /b cmd /c "adb logcat -v threadtime > %LOG_DIR%\full-logcat.log 2>&1"
timeout /t 2 /nobreak >nul
start /b cmd /c "adb logcat ReactNativeJS:V ReactNative:V *:S > %LOG_DIR%\react-native.log 2>&1"
timeout /t 2 /nobreak >nul
echo OK - Logging started
echo.

echo [6/8] Launching Sinoman App...
adb shell am start -n %APP_PACKAGE%/.MainActivity
if errorlevel 1 (
    echo ERROR: Failed to launch app
    pause
    exit /b 1
)
echo OK - App launched
echo.

echo [7/8] Monitoring app (30 seconds)...
echo Press Ctrl+C to stop early, or wait for auto-stop
echo.

REM Monitor for 30 seconds
for /L %%i in (30,-1,1) do (
    <nul set /p "=Time remaining: %%i seconds  "
    timeout /t 1 /nobreak >nul
    echo.
)

echo.
echo [8/8] Collecting diagnostic data...

REM Take screenshot
echo Taking screenshot...
adb shell screencap /sdcard/screenshot-%TIMESTAMP%.png
adb pull /sdcard/screenshot-%TIMESTAMP%.png %LOG_DIR%\ >nul 2>&1

REM Get memory stats
echo Getting memory stats...
adb shell dumpsys meminfo %APP_PACKAGE% > %LOG_DIR%\memory-stats.txt 2>&1

REM Get app info
echo Getting app info...
adb shell dumpsys package %APP_PACKAGE% | findstr "versionCode versionName" > %LOG_DIR%\app-info.txt 2>&1

echo OK - Diagnostic data collected
echo.

REM Stop logging
echo Stopping logcat processes...
taskkill /F /FI "WINDOWTITLE eq adb logcat*" >nul 2>&1
timeout /t 2 /nobreak >nul
echo OK - Logging stopped
echo.

echo ============================================
echo Testing Complete!
echo ============================================
echo.
echo Log files saved to: %LOG_DIR%
echo.
echo Files created:
dir /b %LOG_DIR%
echo.

echo To analyze logs:
echo   findstr /i "error" %LOG_DIR%\full-logcat.log
echo   findstr /i "crash exception fatal" %LOG_DIR%\react-native.log
echo   type %LOG_DIR%\memory-stats.txt
echo.

echo Opening log directory...
start explorer %LOG_DIR%

pause
